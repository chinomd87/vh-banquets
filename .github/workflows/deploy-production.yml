name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Security: Restrict workflow permissions
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    # Security: Prevent workflow from running on forks
    if: github.repository == 'matthewdionisopoulos/vh-banquets'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --coverage --watchAll=false

      - name: Build for production
        run: npm run build:prod
        env:
          REACT_APP_ENV: production
          REACT_APP_DOMAIN: vhbanquets.com
          REACT_APP_API_URL: https://api.vhbanquets.com
          GENERATE_SOURCEMAP: false

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: production-build
          path: build/
          retention-days: 30

      # Uncomment and configure for your preferred deployment method:
      
      # Deploy to Netlify
      # - name: Deploy to Netlify
      #   uses: nwtgck/actions-netlify@v3.0
      #   with:
      #     publish-dir: './build'
      #     production-branch: main
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     deploy-message: "Deploy from GitHub Actions"
      #   env:
      #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      #     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      # Deploy to AWS S3
      # - name: Deploy to S3
      #   uses: jakejarvis/s3-sync-action@master
      #   with:
      #     args: --delete
      #   env:
      #     AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_REGION: 'us-east-1'
      #     SOURCE_DIR: 'build'

      # Deploy via FTP/SFTP to traditional hosting
      # - name: Deploy via FTP
      #   uses: SamKirkland/FTP-Deploy-Action@v4.3.5
      #   with:
      #     server: ${{ secrets.FTP_SERVER }}
      #     username: ${{ secrets.FTP_USERNAME }}
      #     password: ${{ secrets.FTP_PASSWORD }}
      #     local-dir: build/
      #     server-dir: public_html/

  lighthouse-audit:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: success()
    
    steps:
      - name: Audit URLs using Lighthouse
        uses: treosh/lighthouse-ci-action@v11
        with:
          urls: |
            https://vhbanquets.com
          uploadArtifacts: true
          temporaryPublicStorage: true
